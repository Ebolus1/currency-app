{"version":3,"sources":["CurrencyTable.js","CurrencyConverter.js","HChart.js","Footer.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["countryList","CurrencyTable","props","fetchRequest","base","fetch","then","response","console","log","ok","json","Error","data","setState","date","rates","catch","error","handleBaseChange","event","value","target","state","bind","this","id","className","onChange","map","country","key","label","React","Component","CurrencyConverter","baseMath","handleMathBase","otherMath","other","handleMathOther","handleChangeBase","e","handleChangeOther","handleNumChangeBase","baseValue","handleNumChangeOther","otherValue","calc1","calc2","type","placeholder","HChart","getHistoricalRates","buildChart","labels","chartRef","current","getContext","chart","destroy","Chart","datasets","fill","tension","borderColor","options","responsive","endDate","Date","toISOString","split","startDate","getTime","chartLabels","Object","keys","chartData","values","rate","chartLabel","message","createRef","ref","library","add","fab","faGithub","faLinkedin","faUser","Footer","href","icon","size","Header","Navbar","bg","expand","Brand","to","Toggle","aria-controls","Collapse","Nav","Link","Home","Table","Converter","HistoryChart","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oUAEMA,EAAc,CAChB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAqFrNC,E,kDAhFX,WAAaC,GAAQ,IAAD,8BAChB,cAAMA,IAYVC,aAAe,SAACC,GACZC,MAAM,+CAAgDD,GAAOE,MAAK,SAACC,GAGlE,GAFGC,QAAQC,IAAIL,GAEXG,EAASG,GACZ,OAAOH,EAASI,OAElB,MAAM,IAAIC,MAAM,sCACZN,MAAK,SAACO,GACF,EAAKC,SAAS,CACVC,KAAMF,EAAKE,KACXC,MAAOH,EAAKG,MACZZ,KAAMS,EAAKT,OAEnBI,QAAQC,IAAI,YAAaI,MACtBI,OAAM,SAACC,GACVV,QAAQC,IAAIS,OA7BA,EAiCpBC,iBAAmB,SAACC,GAChBZ,QAAQC,IAAI,gBACZ,EAAKK,SAAS,CAACO,MAAOD,EAAME,OAAOD,QACnC,IAAMjB,EAAOgB,EAAME,OAAOD,MAC1B,EAAKlB,aAAaC,IAnClB,EAAKmB,MAAQ,CACTF,MAAO,GACPL,MAAO,GACPD,KAAM,QACNX,KAAM,OAEd,EAAKe,iBAAmB,EAAKA,iBAAiBK,KAAtB,gBARJ,E,gEA2ChBC,KAAKtB,aAAasB,KAAKF,MAAMnB,Q,+BAIvB,IAAD,OACL,OACE,yBAAKsB,GAAG,YACJ,yBAAKC,UAAU,sBACf,wBAAID,GAAG,SAASC,UAAU,2BAA1B,kBACA,2BAAOA,UAAU,YAAjB,kBAEA,4BAAQC,SAAUH,KAAKN,kBAEpBnB,EAAY6B,KAAI,SAACC,GAAD,OAAa,4BAAQC,IAAKD,EAASE,MAAOF,EAAST,MAAOS,SAG7E,uBAAGH,UAAU,cAAb,2BAAmDF,KAAKF,MAAMR,MAC9D,2BAAOW,GAAG,WAAWC,UAAU,oBAC7B,+BACE,4BACE,yCACA,uCAEG3B,EAAY6B,KAAI,SAACC,GAAD,OACjB,wBAAIC,IAAKD,GACT,4BAAKA,EAAL,KACA,4BAAK,EAAKP,MAAMP,MAAMc,gB,GAtEhBG,IAAMC,WCL5BlC,EAAc,CAChB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OA8FrNmC,E,kDA1FX,WAAajC,GAAQ,IAAD,8BAChB,cAAMA,IAqBVC,aAAe,WACXE,MAAM,+CAAiD,EAAKkB,MAAMnB,MAAOE,MAAK,SAACC,GAE9E,GAAIA,EAASG,GACZ,OAAOH,EAASI,OAElB,MAAM,IAAIC,MAAM,sCACZN,MAAK,SAACO,GACF,EAAKC,SAAS,CACVE,MAAOH,EAAKG,QAEpB,EAAKF,SAAS,CAACsB,SAAU,EAAKb,MAAMP,MAAM,EAAKO,MAAMnB,OAAQ,EAAKiC,gBAClE,EAAKvB,SAAS,CAACwB,UAAW,EAAKf,MAAMP,MAAM,EAAKO,MAAMgB,QAAS,EAAKC,oBACrEvB,OAAM,SAACC,GACNV,QAAQC,IAAIS,OApCA,EAwCpBuB,iBAAmB,SAACC,GAChB,EAAK5B,SAAS,CAACV,KAAMsC,EAAEpB,OAAOD,OAAO,EAAKlB,aAAa,EAAKkC,iBAzC5C,EA4CpBM,kBAAoB,SAACD,GACjB,EAAK5B,SAAS,CAACyB,MAAOG,EAAEpB,OAAOD,OAAO,EAAKlB,aAAa,EAAKW,SAAS,CAACwB,UAAW,EAAKf,MAAMP,MAAM,EAAKO,MAAMgB,SAAS,EAAKC,kBA7C5G,EAgDpBI,oBAAsB,SAACF,GACnB,EAAK5B,SAAS,CAAC+B,UAAWH,EAAEpB,OAAOD,OAAO,EAAKgB,iBAjD/B,EAoDpBS,qBAAuB,SAACJ,GACpB,EAAK5B,SAAS,CAACiC,WAAYL,EAAEpB,OAAOD,OAAQ,EAAKmB,kBArDjC,EAwDpBH,eAAiB,WACb7B,QAAQC,IAAI,EAAKc,MAAMe,WACvB,IAAMU,EAAU,EAAKzB,MAAMsB,UAAc,EAAKtB,MAAMe,UACpD,EAAKxB,SAAS,CAACiC,WAAYC,KA3DX,EA8DpBR,gBAAkB,WACd,IAAMS,EAAU,EAAK1B,MAAMwB,WAAe,EAAKxB,MAAMe,UACrD,EAAKxB,SAAS,CAAC+B,UAAWI,KA9D1B,EAAK1B,MAAQ,CACTsB,UAAW,EACXE,WAAY,EACZ/B,MAAO,GACPZ,KAAM,MACNmC,MAAO,MACPH,SAAU,EACVE,UAAW,GAEf,EAAKM,oBAAsB,EAAKA,oBAAoBpB,KAAzB,gBAC3B,EAAKsB,qBAAuB,EAAKA,qBAAqBtB,KAA1B,gBAC5B,EAAKiB,iBAAmB,EAAKA,iBAAiBjB,KAAtB,gBACxB,EAAKmB,kBAAoB,EAAKA,kBAAkBnB,KAAvB,gBACzB,EAAKrB,aAAe,EAAKA,aAAaqB,KAAlB,gBACpB,EAAKa,eAAiB,EAAKA,eAAeb,KAApB,gBACtB,EAAKgB,gBAAkB,EAAKA,gBAAgBhB,KAArB,gBAjBP,E,qDAqEhB,OACE,yBAAKE,GAAG,qBACN,yBAAKC,UAAU,gCACb,wBAAID,GAAG,eAAP,sBACA,6BACA,4BAAQC,UAAU,YAAYC,SAAUH,KAAKgB,kBAC1CzC,EAAY6B,KAAI,SAACC,GAAD,OAAa,4BAAQC,IAAKD,EAASE,MAAOF,EAAST,MAAOS,QAG7E,2BAAOF,SAAUH,KAAKmB,oBAAqBjB,UAAU,YAAYuB,KAAK,SAASC,YAAY,aAAanB,MAAM,QAAQX,MAAOI,KAAKF,MAAMsB,YACxI,uBAAGlB,UAAU,wBAAb,eACA,4BAAQA,UAAU,YAAYC,SAAYH,KAAKkB,mBAC5C3C,EAAY6B,KAAI,SAACC,GAAD,OAAa,4BAAQC,IAAKD,EAASE,MAAOF,EAAST,MAAOS,QAE7E,2BAAOF,SAAUH,KAAKqB,qBAAsBnB,UAAU,YAAYuB,KAAK,SAASC,YAAY,iBAAiBnB,MAAM,QAAQX,MAAOI,KAAKF,MAAMwB,mB,GApF3Hd,IAAMC,W,iBCFhClC,EAAc,CAChB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OA4GrNoD,E,kDAxGX,WAAalD,GAAQ,IAAD,8BAChB,cAAMA,IAmBVuC,iBAAmB,SAACC,GACf,EAAK5B,SAAS,CAACV,KAAMsC,EAAEpB,OAAOD,OAAO,EAAKgC,mBAAoB,EAAKC,aArBpD,EAwBpBX,kBAAoB,SAACD,GAChB,EAAK5B,SAAS,CAACyB,MAAOG,EAAEpB,OAAOD,OAAO,EAAKgC,mBAAmB,EAAKC,aAzBpD,EA4BpBA,WAAa,SAACC,EAAQ1C,EAAMmB,GACP,EAAKwB,SAASC,QAAQC,WAAW,MACxB,qBAAf,EAAKC,OACd,EAAKA,MAAMC,UAEb,EAAKD,MAAQ,IAAIE,IAAM,EAAKL,SAASC,QAAQC,WAAW,MAAO,CAC7DR,KAAM,OACNrC,KAAM,CACJ0C,SACAO,SAAU,CACR,CACE9B,MAAOA,EACPnB,OACAkD,MAAM,EACNC,QAAS,EACTC,YAAa,qBAInBC,QAAS,CACPC,YAAY,MAhDA,EAqDpBd,mBAAqB,SAACjD,EAAMmC,GACxB,IAAM6B,GAAU,IAAIC,MAAOC,cAAcC,MAAM,KAAK,GAC9CC,EAAY,IAAIH,MAAM,IAAIA,MAAMI,UAAa,QAA2BH,cAAcC,MAAM,KAAK,GAEvGlE,MAAM,4DAAD,OAA6DmE,EAA7D,mBAAiFJ,EAAjF,iBAAiG,EAAK7C,MAAMnB,KAA5G,oBAA4H,EAAKmB,MAAMgB,QAASjC,MAAK,SAACC,GAE3J,GAAIA,EAASG,GACT,OAAOH,EAASI,OAElB,MAAM,IAAIC,MAAM,sCACZN,MAAK,SAAAO,GACT,GAAIA,EAAKK,MACP,MAAM,IAAIN,MAAMC,EAAKK,OAEvB,IAAMwD,EAAcC,OAAOC,KAAK/D,EAAKG,OAC/B6D,EAAYF,OAAOG,OAAOjE,EAAKG,OAAOa,KAAI,SAAAkD,GAAI,OAAIA,EAAK,EAAKxD,MAAMgB,UAClEyC,EAAU,UAAM,EAAKzD,MAAMnB,KAAjB,YAAyB,EAAKmB,MAAMgB,OACpD,EAAKe,WAAWoB,EAAaG,EAAWG,MAEzC/D,OAAM,SAAAC,GAAK,OAAIV,QAAQU,MAAMA,EAAM+D,aAtEpC,EAAK1D,MAAQ,CACTnB,KAAM,MACNmC,MAAO,OAEd,EAAKiB,SAAWvB,IAAMiD,YACtB,EAAKzC,iBAAmB,EAAKA,iBAAiBjB,KAAtB,gBACxB,EAAKmB,kBAAoB,EAAKA,kBAAkBnB,KAAvB,gBACzB,EAAK8B,WAAa,EAAKA,WAAW9B,KAAhB,gBAClB,EAAK6B,mBAAqB,EAAKA,mBAAmB7B,KAAxB,gBAVP,E,gEAeHC,KAAKF,MAAMnB,KACVqB,KAAKF,MAAMgB,Q,+BA8DzB,OACI,6BACI,yBAAKZ,UAAU,gBACX,yBAAKA,UAAU,2BACX,wBAAID,GAAG,eAAeC,UAAU,cAAhC,uCACA,6BACA,uBAAGA,UAAU,cAAb,8DACA,uBAAGA,UAAU,wBAAb,kBACA,4BAAQA,UAAU,YAAYC,SAAUH,KAAKgB,kBACxCzC,EAAY6B,KAAI,SAACC,GAAD,OAAa,4BAAQC,IAAKD,EAASE,MAAOF,EAAST,MAAOS,QAE/E,uBAAGH,UAAU,wBAAb,wBACA,4BAAQA,UAAU,YAAYC,SAAUH,KAAKkB,mBACxC3C,EAAY6B,KAAI,SAACC,GAAD,OAAa,4BAAQC,IAAKD,EAASE,MAAOF,EAAST,MAAOS,QAE/E,6BACI,4BAAQqD,IAAK1D,KAAK+B,mB,GA/FzBvB,IAAMC,W,gCCD3BkD,IAAQC,IAAIC,IAAKC,IAAUC,IAAYC,K,IAgBxBC,E,uKAXX,OACE,yBAAK/D,UAAU,UAEd,uBAAGgE,KAAK,gCACN,kBAAC,IAAD,CAAiBC,KAAM,CAAC,MAAO,UAAWjE,UAAU,0BAA0BkE,KAAK,a,GAPvE5D,IAAMC,W,gBCiBZ4D,E,uKAjBP,OACI,yBAAKnE,UAAU,UACX,kBAACoE,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,MACtB,kBAACF,EAAA,EAAOG,MAAR,KAAc,kBAAC,IAAD,CAAMC,GAAG,UAAT,SACd,kBAACJ,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,kBAACN,EAAA,EAAOO,SAAR,CAAiB5E,GAAG,oBAChB,kBAAC6E,EAAA,EAAD,CAAK5E,UAAU,WACX,kBAAC4E,EAAA,EAAIC,KAAL,KAAU,kBAAC,IAAD,CAAML,GAAG,WAAT,mBACV,kBAACI,EAAA,EAAIC,KAAL,KAAU,kBAAC,IAAD,CAAML,GAAG,eAAT,+B,GAZjBlE,IAAMC,WCKrBuE,EAAO,WACX,OACI,6BACE,yBAAK9E,UAAU,gBACb,yBAAKA,UAAU,2BACb,wBAAID,GAAG,gBAAgBC,UAAU,cAAjC,SACA,uBAAGA,UAAU,0BAAb,uCAON+E,EAAQ,WACZ,OACE,6BACC,kBAAC,EAAD,QAKCC,EAAY,WAChB,OACE,6BACE,kBAAC,EAAD,QAKAC,EAAe,WACnB,OACE,6BACE,kBAAC,EAAD,QAuBSC,MAlBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKlF,UAAU,OACb,kBAAC,EAAD,MACA,6BACE,kBAAC,IAAD,CAAOmF,KAAK,IAAIC,OAAK,EAACC,UAAWP,IACjC,kBAAC,IAAD,CAAOK,KAAK,SAASE,UAAWP,IAChC,kBAAC,IAAD,CAAOK,KAAK,UAAUE,UAAWN,IACjC,kBAAC,IAAD,CAAOI,KAAK,cAAcE,UAAWL,IACrC,kBAAC,IAAD,CAAOG,KAAK,iBAAiBE,UAAWJ,KAE1C,kBAAC,EAAD,SC/CYK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvH,MAAK,SAAAwH,GACJA,EAAaC,gBAEd9G,OAAM,SAAAC,GACLV,QAAQU,MAAMA,EAAM+D,c","file":"static/js/main.f27674b6.chunk.js","sourcesContent":["import React from 'react';\n\nconst countryList = [\n    \"GBP\", \"CAD\", \"USD\", \"AUD\", \"BGN\", \"BRL\", \"CHF\", \"CNY\", \"CZK\", \"DKK\", \"EUR\", \"HKD\", \"HRK\", \"HUF\", \"IDR\", \"ILS\", \"INR\", \"ISK\", \"JPY\", \"KRW\", \"MXN\", \"MYR\", \"NOK\", \"NZD\", \"PHP\", \"PLN\", \"RON\", \"RUB\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"ZAR\"\n]\n\n\nclass CurrencyTable extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            value: \"\",\n            rates: [],\n            date: 'today',\n            base: \"USD\",\n        };\n    this.handleBaseChange = this.handleBaseChange.bind(this);\n    }\n\n    \n\n    fetchRequest = (base) => {\n        fetch('https://api.exchangeratesapi.io/latest?base='+(base)).then((response) => {\n            console.log(base);\n    \n         if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Request was either a 404 or 500');\n         }).then((data) => {\n                this.setState({ \n                    date: data.date,\n                    rates: data.rates,\n                    base: data.base,\n                })\n            console.log('json data', data);\n            }).catch((error) => {\n            console.log(error);\n        })\n    }\n\n    handleBaseChange = (event) => {\n        console.log(\"base changed\");\n        this.setState({value: event.target.value});   \n        const base = event.target.value;\n        this.fetchRequest(base);\n    }\n\n    \n\n    componentDidMount () {\n        this.fetchRequest(this.state.base);\n    }\n    \n    \n    render() {\n        return (\n          <div id=\"tablediv\">\n              <div className=\"table-dark darkDiv\">\n              <h1 id=\"ctable\" className=\"tableheading table-dark\">Currency Table</h1>\n              <label className=\"d-inline\">\n                  Base Currency : \n              <select onChange={this.handleBaseChange}>\n                  \n                {countryList.map((country) => <option key={country} label={country} value={country}></option>)}\n              </select>\n              </label>\n              <p className=\"table-dark\">Rates are current as of {this.state.date}</p>     \n              <table id=\"curtable\" className=\"table table-dark\">\n                <tbody>\n                  <tr>\n                    <th>Currency:</th>\n                    <th>Value:</th>\n                  </tr>\n                      {countryList.map((country) => \n                      <tr key={country}>\n                      <td>{country} </td>\n                      <td>{this.state.rates[country]}</td>\n                      </tr>\n                      )}\n                </tbody>\n              </table>\n              </div>\n          </div>\n        );  \n    }\n}\n\nexport default CurrencyTable;","import React from 'react';\n\nconst countryList = [\n    \"GBP\", \"CAD\", \"USD\", \"AUD\", \"BGN\", \"BRL\", \"CHF\", \"CNY\", \"CZK\", \"DKK\", \"EUR\", \"HKD\", \"HRK\", \"HUF\", \"IDR\", \"ILS\", \"INR\", \"ISK\", \"JPY\", \"KRW\", \"MXN\", \"MYR\", \"NOK\", \"NZD\", \"PHP\", \"PLN\", \"RON\", \"RUB\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"ZAR\"\n]\n\nclass CurrencyConverter extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            baseValue: 1,\n            otherValue: 1,\n            rates: [],\n            base: 'GBP',\n            other: 'GBP',\n            baseMath: 1,\n            otherMath: 1,\n        }\n        this.handleNumChangeBase = this.handleNumChangeBase.bind(this);\n        this.handleNumChangeOther = this.handleNumChangeOther.bind(this);\n        this.handleChangeBase = this.handleChangeBase.bind(this);\n        this.handleChangeOther = this.handleChangeOther.bind(this);\n        this.fetchRequest = this.fetchRequest.bind(this);\n        this.handleMathBase = this.handleMathBase.bind(this);\n        this.handleMathOther = this.handleMathOther.bind(this);\n\n    }\n    \n\n    fetchRequest = () => {\n        fetch('https://api.exchangeratesapi.io/latest?base='+ (this.state.base)).then((response) => {\n    \n         if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Request was either a 404 or 500');\n         }).then((data) => {\n                this.setState({ \n                    rates: data.rates,\n                })\n            this.setState({baseMath: this.state.rates[this.state.base]}, this.handleMathBase);\n            this.setState({otherMath: this.state.rates[this.state.other]}, this.handleMathOther);\n        }).catch((error) => {\n            console.log(error);\n        })\n    }\n\n    handleChangeBase = (e) => {\n        this.setState({base: e.target.value},this.fetchRequest,this.handleMathBase);     \n    }\n\n    handleChangeOther = (e) => {\n        this.setState({other: e.target.value},this.fetchRequest,this.setState({otherMath: this.state.rates[this.state.other]}),this.handleMathOther);     \n    }\n\n    handleNumChangeBase = (e) => {\n        this.setState({baseValue: e.target.value},this.handleMathBase);  \n    }\n\n    handleNumChangeOther = (e) => {\n        this.setState({otherValue: e.target.value}, this.handleMathOther);  \n    }\n\n    handleMathBase = () => {\n        console.log(this.state.otherMath);\n        const calc1 = ((this.state.baseValue) * (this.state.otherMath));\n        this.setState({otherValue: calc1});\n    }\n\n    handleMathOther = () => {\n        const calc2 = ((this.state.otherValue) / (this.state.otherMath));\n        this.setState({baseValue: calc2});\n\n    }\n\n    render() {\n        return (\n          <div id=\"converterOuterDiv\">\n            <div className=\"table-dark converterInnerDiv\">\n              <h1 id=\"curexchange\">Currency Converter</h1>\n              <hr></hr>\n              <select className=\"phoneView\" onChange={this.handleChangeBase}>\n                {countryList.map((country) => <option key={country} label={country} value={country}></option>)}\n              </select>\n           \n              <input onChange={this.handleNumChangeBase} className=\"phoneView\" type=\"number\" placeholder=\"Base Value\" label=\"Value\" value={this.state.baseValue}></input>\n              <p className=\"phoneView cconverter\">Converts To</p>\n              <select className=\"phoneView\" onChange = {this.handleChangeOther}>\n                {countryList.map((country) => <option key={country} label={country} value={country}></option>)}\n              </select>\n              <input onChange={this.handleNumChangeOther} className=\"phoneView\" type=\"number\" placeholder=\"Exchange Value\" label=\"Value\" value={this.state.otherValue}></input>\n            </div>\n          </div>\n        );  \n    }\n}\n\nexport default CurrencyConverter;","import React from 'react';\nimport Chart from 'chart.js';\nimport { Redirect } from 'react-router-dom';\n\nconst countryList = [\n    \"GBP\", \"CAD\", \"USD\", \"AUD\", \"BGN\", \"BRL\", \"CHF\", \"CNY\", \"CZK\", \"DKK\", \"EUR\", \"HKD\", \"HRK\", \"HUF\", \"IDR\", \"ILS\", \"INR\", \"ISK\", \"JPY\", \"KRW\", \"MXN\", \"MYR\", \"NOK\", \"NZD\", \"PHP\", \"PLN\", \"RON\", \"RUB\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"ZAR\"\n]\n\nclass HChart extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            base: 'GBP',\n            other: 'GBP',\n        }\n     this.chartRef = React.createRef();\n     this.handleChangeBase = this.handleChangeBase.bind(this);\n     this.handleChangeOther = this.handleChangeOther.bind(this);\n     this.buildChart = this.buildChart.bind(this);\n     this.getHistoricalRates = this.getHistoricalRates.bind(this);\n\n    }\n\n    componentDidMount() {\n        const base = this.state.base;\n        const other = this.state.other;\n    }\n\n\n    handleChangeBase = (e) => {\n         this.setState({base: e.target.value},this.getHistoricalRates, this.buildChart);\n    }\n\n    handleChangeOther = (e) => {\n         this.setState({other: e.target.value},this.getHistoricalRates,this.buildChart);        \n    }\n\n    buildChart = (labels, data, label) => {\n        const chartRef = this.chartRef.current.getContext(\"2d\");\n        if (typeof this.chart !== \"undefined\") {\n          this.chart.destroy();\n        }\n        this.chart = new Chart(this.chartRef.current.getContext(\"2d\"), {\n          type: 'line',\n          data: {\n            labels,\n            datasets: [\n              {\n                label: label,\n                data,\n                fill: false,\n                tension: 0,\n                borderColor: 'rgb(66,135,245)'\n              }\n            ]\n          },\n          options: {\n            responsive: true,\n          }\n        })\n      }\n\n    getHistoricalRates = (base, other) => {\n        const endDate = new Date().toISOString().split('T')[0];\n        const startDate = new Date((new Date).getTime() - (30 * 24 * 60 * 60 * 1000)).toISOString().split('T')[0];\n    \n        fetch(`https://alt-exchange-rate.herokuapp.com/history?start_at=${startDate}&end_at=${endDate}&base=${this.state.base}&symbols=${this.state.other}`).then((response) => {\n\n        if (response.ok) {\n            return response.json();\n          }\n          throw new Error('Request was either a 404 or 500');\n           }).then(data => {\n          if (data.error) {\n            throw new Error(data.error);\n          }\n          const chartLabels = Object.keys(data.rates);\n          const chartData = Object.values(data.rates).map(rate => rate[this.state.other]);\n          const chartLabel = `${this.state.base}/${this.state.other}`;\n          this.buildChart(chartLabels, chartData, chartLabel);\n        })\n        .catch(error => console.error(error.message));\n    }\n\n    \n    \n    render () {\n        return (\n            <div>\n                <div className=\"welcomeOuter\">\n                    <div className=\"welcomeInner table-dark\">\n                        <h1 id=\"chartheading\" className=\"table-dark\">Historical Currency Rate Comparison</h1>\n                        <hr></hr>\n                        <p className=\"table-dark\">Chart displays the past 30 days of currency rates selected</p>\n                        <p className=\"table-dark phoneView\">Base Currency:</p>\n                        <select className=\"phoneView\" onChange={this.handleChangeBase}>\n                            {countryList.map((country) => <option key={country} label={country} value={country}></option>)}\n                        </select>\n                        <p className=\"table-dark phoneView\">Comparison Currency:</p>\n                        <select className=\"phoneView\" onChange={this.handleChangeOther}>\n                            {countryList.map((country) => <option key={country} label={country} value={country}></option>)}\n                        </select>\n                        <div>\n                            <canvas ref={this.chartRef} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default HChart;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport {  faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons'\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(fab, faGithub, faLinkedin, faUser)\n\nclass Footer extends React.Component {\n   \n  render() {\n    return (\n      <div className=\"footer\">\n\n       <a href=\"https://github.com/ebolus101\">\n         <FontAwesomeIcon icon={['fab', 'github']} className=\"socialIcons footerLinks\" size=\"3x\"/>     \n       </a>\n     </div>\n    );\n  }\n}\n\nexport default Footer;\n   \n","import React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { Link } from \"react-router-dom\";\n\n\nclass Header extends React.Component {\n\n\n    render() {\n        return (\n            <div className=\"header\">\n                <Navbar bg=\"light\" expand=\"lg\">\n                    <Navbar.Brand><Link to=\"/Home/\">Home</Link></Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"ml-auto\">\n                            <Nav.Link><Link to=\"/Table/\">Currency Table</Link></Nav.Link>\n                            <Nav.Link><Link to=\"/Converter/\">Currency Converter</Link></Nav.Link>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n            </div>\n        )\n    }\n}\n\nexport default Header;\n\n","import React from 'react';\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport CurrencyTable from './CurrencyTable';\nimport CurrencyConverter from './CurrencyConverter';\nimport HChart from './HChart'\nimport Footer from './Footer';\nimport Header from './Header';\n\nconst Home = () => {\n  return (\n      <div>\n        <div className=\"welcomeOuter\">\n          <div className=\"welcomeInner table-dark\"> \n            <h1 id=\"welcomeHeader\" className=\"table-dark\">Hello</h1>\n            <p className=\"table-dark welcomeText\"> Use this app to track currency</p>\n          </div>\n        </div>\n      </div>\n  )\n}\n\nconst Table = () => {\n  return (\n    <div>\n     <CurrencyTable/>\n    </div>\n  )\n}\n\nconst Converter = () => {\n  return (\n    <div>\n      <CurrencyConverter/>\n    </div>\n  )\n}\n\nconst HistoryChart = () => {\n  return (\n    <div>\n      <HChart/>\n    </div>\n  )\n}\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header/>\n        <div>\n          <Route path='/' exact component={Home}/>\n          <Route path='/Home/' component={Home} />\n          <Route path='/Table/' component={Table} />\n          <Route path='/Converter/' component={Converter} />\n          <Route path='/HistoryChart/' component={HistoryChart} />\n        </div>\n        <Footer/>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}